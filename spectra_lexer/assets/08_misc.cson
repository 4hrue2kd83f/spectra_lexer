# Other unique rule patterns/combinations not specified elsewhere

{
  # left bank
  "ent.":   ["SPW",        "ent",         [], "prefix `ent` (SPWER → enter)"],
  "int.":   ["SPW",        "int",         [], "prefix `int` (SPWELGT → intelligent)"],
  "enter.": ["SPWR",       "(ent.)e(r.)", [], "ONLY works as prefix"],
  "inter.": ["SPWR",       "(int.)e(r.)", [], "ONLY works as prefix"],

  # right bank
  ".ded":   ["-TD",        "[d|.t](.ed)", [], "use -T for first of two `d`s (standard?) (SKWRAEUTD → jaded)"],
  ".xed":   ["-BGD",       "[x|.k](.ed)", [], "treat `x` as `k` to avoid -SD combo (PLEUBGD → mixed)"],

  # split/slurred strokes
  "b/b":    ["-B/PW",      "(.b)(~/~)[|b.]",   ["RARE"], "consonant `b` split between strokes"],
  "c/c":    ["-BG/K",      "(.c)(~/~)[|c.]",   ["RARE"], "hard `c` split between strokes"],
  "C/C":    ["-S/S",       "(.C)(~/~)[|C.]",   ["RARE"], "soft `c` split between strokes"],
  "d/d":    ["-D/TK",      "(.d)(~/~)[|d.]",   ["RARE"], "consonant `d` split between strokes"],
  "f/f":    ["-F/TP",      "(.f)(~/~)[|f.]",   ["RARE"], "consonant `f` split between strokes"],
  "g/g":    ["-G/TKPW",    "(.g)(~/~)[|g.]",   ["RARE"], "hard `g` split between strokes"],
  "G/G":    ["-PBLG/SKWR", "(.G)(~/~)[|G.]",   ["RARE"], "soft `g` split between strokes"],
  "j/j":    ["-PBLG/SKWR", "(.j)(~/~)[|j.]",   ["RARE"], "consonant `j` split between strokes"],
  "k/k":    ["-BG/K",      "(.k)(~/~)[|k.]",   ["RARE"], "consonant `k` split between strokes"],
  "l/l":    ["-L/HR",      "(.l)(~/~)[|l.]",   ["RARE"], "consonant `l` split between strokes"],
  "m/m":    ["-PL/PH",     "(.m)(~/~)[|m.]",   ["RARE"], "consonant `m` split between strokes"],
  "n/n":    ["-PB/TPH",    "(.n)(~/~)[|n.]",   ["RARE"], "consonant `n` split between strokes"],
  "p/p":    ["-P/P",       "(.p)(~/~)[|p.]",   ["RARE"], "consonant `p` split between strokes"],
  "q/qu":   ["-BG/KW",     "[|.q](~/~)(qu.)",  ["RARE"], "`q` slurred into `u` in next stroke"],
  "r/r":    ["-R/R",       "(.r)(~/~)[|r.]",   ["RARE"], "consonant `r` split between strokes"],
  "s/s":    ["-S/S",       "(.s)(~/~)[|s.]",   ["RARE"], "consonant `s` split between strokes"],
  "s+/s":   ["-Z/S",       "(.s+)(~/~)[|s.]",  ["RARE"], "consonant `s` split between strokes"],
  "t/t":    ["-T/T",       "(.t)(~/~)[|t.]",   ["RARE"], "consonant `t` split between strokes"],
  "v/v":    ["-F/SR",      "(.v)(~/~)[|v.]",   ["RARE"], "consonant `v` split between strokes"],
  "xk/":    ["-BG/S",      "[x|.k](~/~)[|s.]", ["RARE"], "`x` slurred into next stroke"],
  "xk/C":   ["-BG/S",      "[x|.k](~/~)(C.)",  ["RARE"], "`x` slurred into `c` in next stroke"],
  "xk/s":   ["-BG/S",      "[x|.k](~/~)(s.)",  ["RARE"], "`x` slurred into `s` in next stroke"],
  "x/s":    ["-BGS/S",     "(.x)(~/~)[|s.]",   ["RARE"], "consonant `x` split between strokes"],
  "x/x":    ["-BGS/KP",    "(.x)(~/~)[|x.]",   ["RARE"], "consonant `x` split between strokes"],
  "z/s":    ["-Z/S",       "(.z)(~/~)[|s.]",   ["RARE"], "consonant `z` split between strokes"],
  "z/z":    ["-Z/S*",      "(.z)(~/~)[|z.]",   ["RARE"], "consonant `z` split between strokes"],
  "zz+":    ["-T/S",       "[z|.t](~/~)(z.+)", ["RARE"], "Italian `zz` split between strokes"]
}
